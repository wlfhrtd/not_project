{% extends 'base.html.twig' %}

{% block title %}Edit Order{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function () {
            // select2 search field doesn't work with listeners directly so event delegation is required
            /*
            $(document).on('keyup', '.select2-search__field', function(e) {
                let $inputValue = e.target.value;
                let $fields = $inputValue.split(' ');
                let $output = $fields[0].substring(0, 1).toUpperCase() + $fields[0].substring(1).toLowerCase();
                for (let i = 1; i < $fields.length; i++) {
                    $output += ' ' + $fields[i].substring(0, 1).toUpperCase() + $fields[i].substring(1).toLowerCase();
                }
                e.target.value = $output;
            });*/

            // Get the ul that holds the collection of items
            let $collectionHolder = $('div.items');

            $collectionHolder.find('p').each(function () {
                addItemFormDeleteLink($(this));
            })

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find('input').length);

            $('body').on('click', '.add_item_link', function(e) {
                let $collectionHolderClass = $(e.currentTarget).data('collectionHolderClass');
                // add a new item form (see next code block)
                addFormToCollection($collectionHolderClass);
            })
        })

        function addFormToCollection($collectionHolderClass) {
            // Get the ul that holds the collection of items
            let $collectionHolder = $('.' + $collectionHolderClass);

            // Get the data-prototype explained earlier
            let prototype = $collectionHolder.data('prototype');

            // get the new index
            let index = $collectionHolder.data('index');

            let newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add" link li; changed to <p>
            let $newFormLi = $('<p></p>').append(newForm);

            addCalcItemPrice($newFormLi);

            addItemFormDeleteLink($newFormLi);

            addAjaxProduct($newFormLi);

            // .select2entity() call needed when using collections and/or prototype
            // readonly handling just to prevent NaN in Total instead of typeof(elem)!=='undefined' check
            // still buggy if there is any extra item rows with empty fields w/e
            $newFormLi.find('.select2entity').last().select2entity().on('change', function () {
                $newFormLi.find('.item_quantity').attr('readonly', false);
            });

            // Add the new form at the end of the list
            $collectionHolder.append($newFormLi)
        }

        function addItemFormDeleteLink($itemFormLi) {
            //let $removeFormButton = $('<br /><button type="button" class="btn btn-danger">Delete</button><br />');
            //$itemFormLi.append($removeFormButton);

            $itemFormLi.find('.delete_button').on('click', function(e) {
                // remove the li for the item form
                $itemFormLi.remove();
            });
        }

        function addAjaxProduct($newFormLi) {
            $newFormLi.find('select').on('change', function() {
                let id = $newFormLi.find('select').val();
                let dataId = { 'id': id };
                $.ajax({
                    type    :   'GET',
                    url     : "{{ path('find_product_one') }}",
                    dataType:   'json',
                    data    :   dataId,
                    success:function(data){
                        $newFormLi.find('.product_price').val(data.price);
                        $newFormLi.find('.quantity_in_stock').val(data.quantityInStock);
                    }
                });
            });
        }

        function addCalcItemPrice($newFormLi) {
            // let itemPriceField = $('<label>Item total price <input class="item_total_price" disabled="disabled"></label><br />');
            // $newFormLi.append(itemPriceField);

            $newFormLi.find('.item_quantity').on('change', function () {
                let price = parseFloat($newFormLi.find('.product_price').val());
                let quantity = parseInt($newFormLi.find('.item_quantity').val());
                let stock = parseInt($newFormLi.find('.quantity_in_stock').val());

                if (quantity < 0) {
                    quantity = 0;
                    $newFormLi.find('.item_quantity').val(0);
                }

                if (quantity > stock) {
                    quantity = stock;
                    $newFormLi.find('.item_quantity').val(stock);
                }
                // single item total price
                $newFormLi.find('.item_total_price').val(price * quantity);

                // order total price
                let totalOrderPrice = 0;
                $('.item_total_price').each(function (index, item) {
                    totalOrderPrice += parseFloat($(item).val());
                })
                $('#order_total').val(totalOrderPrice);

            });
        }

    </script>
{% endblock%}

{% block body %}
    <h1>Edit Order</h1>

    {{ include('order/_form.html.twig', {'button_label': 'Update'}) }}

    <a href="{{ path('app_order_index') }}" class="btn btn-secondary">back to list</a>

    {{ include('order/_delete_form.html.twig') }}
{% endblock %}
